import java.util.*;
/*
ESERCIZIO: come eliminare un elemento da un arraylist di oggetti con boolean remove(object o)-> la funzione usa il metodo equals() che va quindi ridefinito.
posso usare anche T remove(int) x eliminare un oggetto (che viene ritornato dalla funzione)
*/
class Oggetto{
    private String contenuto;
    public Oggetto(String contenuto){
        this.contenuto=contenuto;
    }
    public boolean equals(Object o){ // senza questa non puo' funzionare la chiamata remove(Oggetto ()) xke' l'implementazione stdrd di equals() e' == (same address or false) 
        System.out.print("working on it ");
        if(o.getClass()==this.getClass()){
            Oggetto oToOgg= (Oggetto) o;
            if(oToOgg.contenuto==contenuto){
                System.out.println("true");
                return true;
            }
            else{
                System.out.println("false");
                return false;
            }
        }
        else{
            System.out.println("false");
            return false;
        }
    }
    public String getContenuto(){
        return contenuto;
    }
}

class DerivatoOggetto extends Oggetto{
    private int cNumerico;
    public DerivatoOggetto(String contenuto, int cNumerico){
        super(contenuto);
        this.cNumerico= cNumerico;
    }
    public boolean equals(Object o){// NB deve essere implementato altrimenti il super puo' dare risultati anomali!!!-> ("a third DERIVED obj", 10) SHOULD BE DIFFERENT FROM ("a third DERIVED obj", 1)
        System.out.print("working on it again ");
        if(o.getClass()==this.getClass()){
            DerivatoOggetto oToDerOgg= (DerivatoOggetto) o;
            if(super.equals(oToDerOgg) && oToDerOgg.cNumerico==cNumerico){
                System.out.println("true");
                return true;
            }
            else{
                System.out.println("false");
                return false;
            }
        }
        else{
            System.out.println("false");
            return false;
        }
    }
}

public class MyClass {
    public static void main(String args[]) {
        ArrayList<Oggetto> obj= new ArrayList<>();
        Oggetto primo= new Oggetto("primo oggetto");
        obj.add(primo);
        obj.add(new Oggetto("a second object"));
        obj.add(new DerivatoOggetto("a third DERIVED obj", 10));
        obj.remove(new Oggetto("primo oggetto"));// trovo e cancello: si-> stesso tipo dinamico, equals da' true
        obj.remove(new Oggetto("a third DERIVED obj"));// trovo e cancello: no-> tipo dinamico diverso, equals da' false
        obj.remove(new DerivatoOggetto("a third DERIVED obj", 1));// trovo e cancello: no->stesso tipo dinamico, equals da' false 
        obj.remove(new DerivatoOggetto("a third DERIVED obj", 10));//trovo e cancello: si-> stesso tipo dinamico, equals da' true
        System.out.println("elementi in lista: " + obj);
    }
}
