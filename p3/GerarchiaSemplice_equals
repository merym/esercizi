import java.util.*;
/*
ESERCIZIO: funzionamento di equals su una gerarchia semplice
*/
class Oggetto{
    private String contenuto;
    public Oggetto(String contenuto){
        this.contenuto=contenuto;
    }
    public boolean equals(Object o){  
        System.out.print("working on it ");
        if(o.getClass()==this.getClass()){
            Oggetto oToOgg= (Oggetto) o;
            if(oToOgg.contenuto==contenuto){
                System.out.println("true");
                return true;
            }
            else{
                System.out.println("false");
                return false;
            }
        }
        else{
            System.out.println("false");
            return false;
        }
    }
    public String getContenuto(){
        return contenuto;
    }
}

class DerivatoOggetto extends Oggetto{
    private int cNumerico;
    public DerivatoOggetto(String contenuto, int cNumerico){
        super(contenuto);
        this.cNumerico= cNumerico;
    }
        public boolean equals(Object o){
        System.out.print("working on it again ");
        if(o.getClass()==this.getClass()){
            DerivatoOggetto oToDerOgg= (DerivatoOggetto) o;
            if(super.equals(oToDerOgg) && oToDerOgg.cNumerico==cNumerico){
                return true;
            }
            else
                return false;
        }
        else
            return false;
    }
}

public class MyClass {
    public static void main(String args[]) {
// TEST: PROVA DI EQUALS IN UNA GERARCHIA
        Oggetto derOgg= new DerivatoOggetto("BLA", 2);
        Oggetto ogg= new Oggetto("BLA");
        // RITORNA SEMPRE FALSO XKE SONO DI TIPO DINAMICO DIVERSO
        System.out.println((derOgg).equals(ogg)); // due di classi diverse, stesso campo comune derivato.equals(base) 
        System.out.println(ogg.equals(derOgg)); // due di classi diverse, stesso campo comune base.equals(derivato)
    }
}
